// main global script file

// called when the game starts, before the first room is loaded
function game_start() 
{
    playable_characters[cChad.ID].is_player = true;
}

// put anything you want to happen every game cycle in here
function repeatedly_execute() 
{
    
}

// put here anything you want to happen every game cycle, even when the game is blocked
function repeatedly_execute_always() 
{
    
}

// called when a key is pressed. keycode holds the key's ASCII code
function on_key_press(int keycode) 
{
    if (IsGamePaused()) keycode = 0; // game paused, so don't react to keypresses
  
    if (keycode == GetASCIINumber(CtrlQ)) QuitGame(1); // Ctrl-Q
    if (keycode == GetASCIINumber(F9)) RestartGame(); // F9
    if (keycode == GetASCIINumber(F12)) SaveScreenShot("scrnshot.pcx");  // F12
    if (keycode == GetASCIINumber(CtrlS)) Debug(0,0); // Ctrl-S, give all inventory
    if (keycode == GetASCIINumber(CtrlV)) Debug(1,0); // Ctrl-V, version
    if (keycode == GetASCIINumber(CtrlA)) Debug(2,0); // Ctrl-A, show walkable areas
    if (keycode == GetASCIINumber(CtrlX)) Debug(3,0); // Ctrl-X, teleport to room
}

function on_mouse_click(MouseButton button) // called when a mouse button is clicked. button is either LEFT or RIGHT
{
    if (IsGamePaused() == 1) // Game is paused, so do nothing (ie. don't allow mouse click)
    {
    }
    else if (button == eMouseLeft) 
    {
        Room.ProcessClick(mouse.x,mouse.y, mouse.Mode);
        gMouseWheel.Visible = false;
    }
    else // right-click, so cycle cursor
    {   
        if(player.Room == 1)
        {
            gMouseWheel.SetPosition(mouse.x - 168, mouse.y - 173);
            gMouseWheel.Visible = true;
        }
    }
}

function dialog_request(int param)
{
    
}

function follow_char()
{
    if(playable_characters[cChad.ID].is_player == true)
    {
        cIca.FollowCharacter(player, 200, 70);
        cChad.FollowCharacter(null,  200,  70);
    }
    else
    {
        cChad.FollowCharacter(player,  200, 70);
        cIca.FollowCharacter(null, 200, 70);
    }
}

function gCharacterChange_On(GUI *theGui, MouseButton button)
{
    if(playable_characters[cChad.ID].is_player == true)
    {
        Display("Character changed to ICA!!");
        cIca.SetAsPlayer();
        playable_characters[cIca.ID].is_player = true;
        playable_characters[cChad.ID].is_player = false;
        follow_char();
        
        gCharacterChange.BackgroundGraphic = 17;
        gInventory.BackgroundGraphic = 20;
        gMouseWheel.BackgroundGraphic = 22;
            
        return;
    }
    else if(playable_characters[cIca.ID].is_player == true)
    {
        Display("Character changed to CHAD!!");
        cChad.SetAsPlayer();
        playable_characters[cIca.ID].is_player = false;
        playable_characters[cChad.ID].is_player = true;
        follow_char();
        
        gCharacterChange.BackgroundGraphic = 16;
        gInventory.BackgroundGraphic = 11;
        gMouseWheel.BackgroundGraphic = 21;
        
        return;
    }
}

function Button1_OnClick(GUIControl *control, MouseButton button)
{
    mouse.Mode = eModeWalkto;
    gMouseWheel.Visible = false;
}

function Button2_OnClick(GUIControl *control, MouseButton button)
{
    mouse.Mode = eModeLookat;
    gMouseWheel.Visible = false;
}

function Button3_OnClick(GUIControl *control, MouseButton button)
{
    mouse.Mode = eModeInteract;
    gMouseWheel.Visible = false;
}



function gEndscreen_OnClick(GUI *theGui, MouseButton button)
{
    player.ChangeRoom(302);
}

function cMierins_UseInv()
{
    if(cChad.ActiveInventory == iOldCigarette)
    {
        cChad.Walk(920, 920, eBlock, eWalkableAreas);
        cMierins.Say("Do you think this is going to light itself? Get the lighter!");
        cChad.LoseInventory(iOldCigarette);
    }
    else if(cChad.ActiveInventory == iLighter)
    {
        cChad.Walk(920, 920, eBlock, eWalkableAreas);
        dDialog2.Start();
        cChad.LoseInventory(iLighter);
    }
}
